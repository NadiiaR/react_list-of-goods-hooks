{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortFIELD","goodsFromServer","App","useState","DEFAULT","sortField","setSortField","sortReverse","setToReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","LENGTH","length","ALFABETICALLY","localeCompare","reverse","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,wBAAAA,E,oCAAAA,E,YAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAASH,EAAUI,SAArD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAoBC,EAApB,KACMC,EA/BR,SACEC,EADF,GAGa,IADTL,EACQ,EADRA,UAAWE,EACH,EADGA,YAEPI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKL,EAAUe,OACb,OAAOF,EAAMG,OAASF,EAAME,OAE9B,KAAKhB,EAAUiB,cACb,OAAOJ,EAAMK,cAAcJ,GAE7B,QACE,OAAO,MAKXP,GACFI,EAAcQ,UAGTR,EAOHS,CAAiBnB,EAAiB,CAAEI,YAAWE,gBAmBnD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QARwB,kBAAMhB,EAAaN,EAAUiB,gBASrDM,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYnB,IAAcL,EAAUiB,gBAJxC,iCAUA,wBACEK,QAhBiB,kBAAMhB,EAAaN,EAAUe,SAiB9CQ,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYnB,IAAcL,EAAUe,SAJxC,4BAUA,wBACEO,QApCc,WAElBd,GADkB,IAAhBD,IAoCEgB,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,YAA4B,IAAhBjB,IAJhB,qBAWEF,GAAaE,EAET,wBACEe,QAtDM,WAClBhB,EAAaN,EAAUI,SACvBI,GAAa,IAqDDe,KAAK,SACLF,UAAU,4BAHZ,mBAQArB,EAAUI,WAIlB,6BACGK,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YChIlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3f90f7fb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortFIELD {\n  LENGTH = 'Sort by length',\n  ALFABETICALLY = 'Sort alphabetically',\n  DEFAULT = '',\n}\n\ninterface PreparedGoods {\n  sortField: string;\n  sortReverse: boolean;\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortField, sortReverse }: PreparedGoods,\n): string[] {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortFIELD.LENGTH:\n          return good1.length - good2.length;\n\n        case SortFIELD.ALFABETICALLY:\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (sortReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortFIELD.DEFAULT);\n  const [sortReverse, setToReverse] = useState(false);\n  const visibleGoods\n    = getPreparedGoods(goodsFromServer, { sortField, sortReverse });\n\n  const handleReset = () => {\n    setSortField(SortFIELD.DEFAULT);\n    setToReverse(false);\n  };\n\n  const handleReverse = () => {\n    if (sortReverse === false) {\n      setToReverse(true);\n    } else {\n      setToReverse(false);\n    }\n  };\n\n  const handleSortAlfabetically = () => setSortField(SortFIELD.ALFABETICALLY);\n\n  const handleSortLength = () => setSortField(SortFIELD.LENGTH);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={handleSortAlfabetically}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SortFIELD.ALFABETICALLY,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={handleSortLength}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SortFIELD.LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={handleReverse}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': sortReverse === false,\n          })}\n        >\n          Reverse\n        </button>\n\n        {\n          sortField || sortReverse\n            ? (\n              <button\n                onClick={handleReset}\n                type=\"button\"\n                className=\"button is-danger is-light\"\n              >\n                Reset\n              </button>\n            )\n            : SortFIELD.DEFAULT\n        }\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}